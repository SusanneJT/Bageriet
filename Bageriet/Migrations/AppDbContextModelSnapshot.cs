// <auto-generated />
using Bageriet.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bageriet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bageriet.Models.Bread", b =>
                {
                    b.Property<int>("BreadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BreadId");

                    b.HasIndex("ProductId");

                    b.ToTable("Bread");

                    b.HasData(
                        new
                        {
                            BreadId = 1,
                            ImageUrl = "/Images/bread1.jpg",
                            InStock = true,
                            LongDescription = "Rågbrödet med consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            Name = "Rågbröd",
                            Price = 12.95m,
                            ProductId = 1,
                            ShortDescription = "Lorem ipsum dolor sit amet, consectem arcu, interdum vel accumsan vitae, lobortis."
                        },
                        new
                        {
                            BreadId = 2,
                            ImageUrl = "/Images/bread2.jpg",
                            InStock = true,
                            LongDescription = "Höstbrödet med consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            Name = "Höstbröd",
                            Price = 11.95m,
                            ProductId = 1,
                            ShortDescription = "Lorem ipsum dolor sit amet, consectem arcu, interdum vel accumsan vitae, lobortis."
                        },
                        new
                        {
                            BreadId = 3,
                            ImageUrl = "/Images/bread3.jpg",
                            InStock = true,
                            LongDescription = "Fröbrödbrödet med consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            Name = "Fröbröd",
                            Price = 13.95m,
                            ProductId = 1,
                            ShortDescription = "Lorem ipsum dolor sit amet, consectem arcu, interdum vel accumsan vitae, lobortis."
                        },
                        new
                        {
                            BreadId = 4,
                            ImageUrl = "/Images/bread4.jpg",
                            InStock = true,
                            LongDescription = "Baguetten med consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            Name = "Baguette",
                            Price = 9.95m,
                            ProductId = 1,
                            ShortDescription = "Lorem ipsum dolor sit amet, consectem arcu, interdum vel accumsan vitae, lobortis."
                        });
                });

            modelBuilder.Entity("Bageriet.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Nybakat bröd som passar lika bra till frukost som till lunch",
                            ProductName = "Bröd"
                        });
                });

            modelBuilder.Entity("Bageriet.Models.Bread", b =>
                {
                    b.HasOne("Bageriet.Models.Product", "Product")
                        .WithMany("Bread")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
